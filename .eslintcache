[{"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\App.js":"1","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\store\\reducers\\voivodeshipsReducer.js":"2","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\store\\reducers\\instrumentsReducer.js":"3","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\Footer.js":"4","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\displays\\BlocksMembersElement.js":"5","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\store\\reducers\\profileReducer.js":"6","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\displays\\BlocksImage.js":"7","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\store\\reducers\\browseReducer.js":"8","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\displays\\BlocksImageElement.js":"9","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\store\\reducers\\searchReducer.js":"10","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\inputs\\DropdownInput.js":"11","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\store\\reducers\\userReducer.js":"12","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\header\\Header.js":"13","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\firebaseConfig.js":"14","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\store\\reducers\\genresReducer.js":"15","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\store\\reducers\\rootReducer.js":"16","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\displays\\BlocksMembers.js":"17","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\Loader.js":"18","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\Content.js":"19","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\store\\reducers\\authReducer.js":"20","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\ScrollToTop.js":"21","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\serviceWorker.js":"22","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\index.js":"23","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\displays\\BlocksRecords.js":"24","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\search\\SearchDisplay.js":"25","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\browse\\BrowseDisplay.js":"26","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\displays\\BlocksStatus.js":"27","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\search\\Search.js":"28","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\auth\\Login.js":"29","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\header\\LoggedOutButtons.js":"30","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\browse\\BrowseContent.js":"31","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\store\\actions\\userActions.js":"32","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\displays\\Blocks.js":"33","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\displays\\BlocksStatusElement.js":"34","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\auth\\EmailVerification.js":"35","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\displays\\BlocksWithButton.js":"36","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\forms\\ProfileDataFormGroup.js":"37","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\users\\UserShortcut.js":"38","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\static_pages\\HomePage.js":"39","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\forms\\PersonalDataFormGroup.js":"40","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\users\\UserProfileEdit.js":"41","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\users\\UserProfile.js":"42","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\users\\UserProfileCreate.js":"43"},{"size":671,"mtime":1606314095415,"results":"44","hashOfConfig":"45"},{"size":146,"mtime":1602607271797,"results":"46","hashOfConfig":"45"},{"size":144,"mtime":1602606333557,"results":"47","hashOfConfig":"45"},{"size":1015,"mtime":1606309080937,"results":"48","hashOfConfig":"45"},{"size":4936,"mtime":1606915641142,"results":"49","hashOfConfig":"45"},{"size":136,"mtime":1603797260534,"results":"50","hashOfConfig":"45"},{"size":3379,"mtime":1605446144374,"results":"51","hashOfConfig":"45"},{"size":134,"mtime":1601629528380,"results":"52","hashOfConfig":"45"},{"size":675,"mtime":1605200554851,"results":"53","hashOfConfig":"45"},{"size":134,"mtime":1601629528389,"results":"54","hashOfConfig":"45"},{"size":2548,"mtime":1606488749666,"results":"55","hashOfConfig":"45"},{"size":422,"mtime":1601917792507,"results":"56","hashOfConfig":"45"},{"size":2553,"mtime":1606309496496,"results":"57","hashOfConfig":"45"},{"size":618,"mtime":1601915793955,"results":"58","hashOfConfig":"45"},{"size":134,"mtime":1602585688842,"results":"59","hashOfConfig":"45"},{"size":916,"mtime":1603281173450,"results":"60","hashOfConfig":"45"},{"size":836,"mtime":1600949288853,"results":"61","hashOfConfig":"45"},{"size":428,"mtime":1606309081139,"results":"62","hashOfConfig":"45"},{"size":2508,"mtime":1606508869860,"results":"63","hashOfConfig":"45"},{"size":2770,"mtime":1605474541898,"results":"64","hashOfConfig":"45"},{"size":381,"mtime":1605183655562,"results":"65","hashOfConfig":"45"},{"size":417,"mtime":1606692804762,"results":"66","hashOfConfig":"45"},{"size":1731,"mtime":1606727813039,"results":"67","hashOfConfig":"45"},{"size":2688,"mtime":1606666247618,"results":"68","hashOfConfig":"45"},{"size":4613,"mtime":1606494765901,"results":"69","hashOfConfig":"45"},{"size":4590,"mtime":1606494765909,"results":"70","hashOfConfig":"45"},{"size":1056,"mtime":1606478209322,"results":"71","hashOfConfig":"45"},{"size":1373,"mtime":1605451218233,"results":"72","hashOfConfig":"45"},{"size":5959,"mtime":1605465166757,"results":"73","hashOfConfig":"45"},{"size":735,"mtime":1601377003097,"results":"74","hashOfConfig":"45"},{"size":4062,"mtime":1606506785225,"results":"75","hashOfConfig":"45"},{"size":5652,"mtime":1606566437137,"results":"76","hashOfConfig":"45"},{"size":1122,"mtime":1606431686633,"results":"77","hashOfConfig":"45"},{"size":1863,"mtime":1606478238502,"results":"78","hashOfConfig":"45"},{"size":2209,"mtime":1605452706198,"results":"79","hashOfConfig":"45"},{"size":1105,"mtime":1604405101501,"results":"80","hashOfConfig":"45"},{"size":14560,"mtime":1605368307158,"results":"81","hashOfConfig":"45"},{"size":3885,"mtime":1606495276297,"results":"82","hashOfConfig":"45"},{"size":4317,"mtime":1606761471980,"results":"83","hashOfConfig":"45"},{"size":22207,"mtime":1606946213584,"results":"84","hashOfConfig":"45"},{"size":14427,"mtime":1606942981572,"results":"85","hashOfConfig":"45"},{"size":25266,"mtime":1606830439834,"results":"86","hashOfConfig":"45"},{"size":11556,"mtime":1606941289575,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1wce1ds",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\App.js",[],["190","191"],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\store\\reducers\\voivodeshipsReducer.js",[],["192","193"],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\store\\reducers\\instrumentsReducer.js",[],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\Footer.js",[],["194","195"],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\displays\\BlocksMembersElement.js",[],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\store\\reducers\\profileReducer.js",[],["196","197"],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\displays\\BlocksImage.js",[],["198","199"],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\store\\reducers\\browseReducer.js",[],["200","201"],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\displays\\BlocksImageElement.js",[],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\store\\reducers\\searchReducer.js",[],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\inputs\\DropdownInput.js",[],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\store\\reducers\\userReducer.js",[],["202","203"],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\header\\Header.js",[],["204","205"],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\firebaseConfig.js",[],["206","207"],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\store\\reducers\\genresReducer.js",[],["208","209"],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\store\\reducers\\rootReducer.js",[],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\displays\\BlocksMembers.js",[],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\Loader.js",[],["210","211"],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\Content.js",[],["212","213"],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\store\\reducers\\authReducer.js",[],["214","215"],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\ScrollToTop.js",[],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\serviceWorker.js",[],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\index.js",[],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\displays\\BlocksRecords.js",[],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\search\\SearchDisplay.js",[],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\browse\\BrowseDisplay.js",[],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\displays\\BlocksStatus.js",[],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\search\\Search.js",[],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\auth\\Login.js",[],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\header\\LoggedOutButtons.js",[],["216","217"],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\browse\\BrowseContent.js",[],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\store\\actions\\userActions.js",[],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\displays\\Blocks.js",[],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\displays\\BlocksStatusElement.js",[],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\auth\\EmailVerification.js",[],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\displays\\BlocksWithButton.js",[],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\forms\\ProfileDataFormGroup.js",[],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\users\\UserShortcut.js",[],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\static_pages\\HomePage.js",[],["218","219"],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\layout\\forms\\PersonalDataFormGroup.js",[],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\users\\UserProfileEdit.js",["220"],"C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\users\\UserProfile.js",["221"],"import React, { Component } from 'react';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { Container, Col, Row, Form, Button, Image as Img, Modal, OverlayTrigger, Tooltip} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport emailjs from 'emailjs-com';\r\nimport ReactPlayer from \"react-player\";\r\nimport isEmpty from \"validator/es/lib/isEmpty\";\r\nimport isEmail from \"validator/es/lib/isEmail\";\r\n\r\nimport \"../../resources/styles/profile_style.css\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMapMarkerAlt, faGlobeAmericas } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { ExclamationCircle } from \"react-bootstrap-icons\";\r\nimport { faFacebook, faYoutube, faInstagram, faSoundcloud } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport Blocks from \"../layout/displays/Blocks\";\r\nimport BlocksWithButton from \"../layout/displays/BlocksWithButton\";\r\nimport ErrorPage from \"../layout/static_pages/ErrorPage\";\r\nimport Loader from \"../layout/Loader\";\r\nimport ReactAudioPlayer from \"react-audio-player\";\r\nimport UserProfileEdit from \"./UserProfileEdit\";\r\n\r\nclass UserProfile extends Component {\r\n    state = {\r\n        messageModalShow: false,\r\n        editModalShow: false,\r\n        name: (this.props.activeUser.isLoaded && this.props.activeUser.isEmpty) || (!this.props.activeUser.isLoaded && this.props.activeUser.isEmpty) ? '' : this.props.activeUser.name,\r\n        email: this.props.auth && this.props.auth.isLoaded && this.props.auth.isEmpty ? '' : this.props.auth.email,\r\n        subject: '',\r\n        message: '',\r\n\r\n        errors: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.activeUser.isLoaded){\r\n            this.setState({\r\n                name: this.props.activeUser.name\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { user, profile, auth, usersOrdered, status, voivodeships, genres, instruments } = this.props;\r\n        const { id } = this.props.match.params;\r\n\r\n\r\n        if (this.props.auth.uid && !this.props.auth.emailVerified) return <Redirect to={\"/potwierdzanie-adresu-email\"}/>\r\n        if (user === null) return <ErrorPage/>\r\n        if (user === undefined || !usersOrdered || !status || !voivodeships || !instruments || !genres) return <Loader/>\r\n\r\n        let sectionArray = [];\r\n\r\n        if (profile && profile.description) sectionArray.push(this.descriptionSection);\r\n        sectionArray.push(this.genresInstrumentsMembersSection);\r\n        if (user.isArtist && user.bandsId && user.bandsId.length !==0) sectionArray.push(this.bandsSection);\r\n        if (profile && profile.recordings && profile.recordings.length !==0 ) sectionArray.push(this.recordsSection);\r\n        if (profile && profile.imageGallery && profile.imageGallery.length !== 0) sectionArray.push(this.gallerySection);\r\n        if (profile && profile.videoLink) sectionArray.push(this.videoSection);\r\n\r\n        let isBackgroundLight = false;\r\n\r\n        return (\r\n            <div id={\"user-profile\"} className={\"page-content\"}>\r\n                {this.userInfoSection(user, profile, auth, id, status, voivodeships, instruments)}\r\n\r\n                {sectionArray.map((section, index) => {\r\n                    isBackgroundLight = !isBackgroundLight;\r\n                    return (\r\n                        <div key={ index }\r\n                             className={\"section py-5\" + (isBackgroundLight? \" background-light\" : \"\")}>\r\n                            <Container>\r\n                                { section(isBackgroundLight) }\r\n                            </Container>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    userInfoSection = (user, profile, auth, id, status, voivodeships, instruments) => {\r\n        let statusArray = user.status && user.status.map(stat => {\r\n            return {\r\n                name: status[stat.statusId].name + (stat.instrumentId ? (\": \" + instruments[stat.instrumentId].name) : \"\")\r\n            }});\r\n\r\n        let voivodeship = voivodeships[user.voivodeshipId].name;\r\n        const renderTooltip = (props) => <Tooltip id=\"button-tooltip\" {...props}>Dodaj więcej informacji o sobie</Tooltip>;\r\n\r\n        const button = auth.uid && auth.uid === id ?\r\n            <div className={\"d-flex flex-row align-items-center\"}>\r\n                <Button\r\n                    variant=\"outline-accent\"\r\n                    size=\"sm\"\r\n                    onClick={() => this.setState({editModalShow: true})}\r\n                >\r\n                    Edytuj profil\r\n                </Button>\r\n\r\n                { profile === undefined ?\r\n                    <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 400 }} overlay={renderTooltip}>\r\n                        <ExclamationCircle className={\"ml-3\"} size={22}/>\r\n                    </OverlayTrigger>\r\n                    : \"\"\r\n                }\r\n                {this.displayEditModal()}\r\n            </div>\r\n            :\r\n            <div className={\"mt-2\"}>\r\n                <Button\r\n                    variant=\"outline-accent\"\r\n                    size=\"sm\"\r\n                    onClick={() => {this.setState({\r\n                        messageModalShow:true,\r\n                        name: (this.props.activeUser.isLoaded && this.props.activeUser.isEmpty) || (!this.props.activeUser.isLoaded && this.props.activeUser.isEmpty) ? '' : this.props.activeUser.name,\r\n                        email: this.props.auth && this.props.auth.isLoaded && this.props.auth.isEmpty ? '' : this.props.auth.email\r\n                    })}}>\r\n                    Skontaktuj się\r\n                </Button>\r\n                {this.displayMessageModal()}\r\n            </div>\r\n\r\n        const links = (\r\n            <div className={\"d-flex flex-row mb-4\"}>\r\n                { profile && profile.facebookLink ? <a href={profile.facebookLink} target={\"_blank\"} rel={\"noopener noreferrer\"}><FontAwesomeIcon icon={faFacebook} className={\"mr-3\"}/></a> : \"\"}\r\n                { profile && profile.youtubeLink ? <a href={profile.youtubeLink} target={\"_blank\"} rel={\"noopener noreferrer\"}><FontAwesomeIcon icon={faYoutube} className={\"mr-3\"}/></a> : \"\"}\r\n                { profile && profile.instagramLink ? <a href={profile.instagramLink} target={\"_blank\"} rel={\"noopener noreferrer\"}><FontAwesomeIcon icon={faInstagram} className={\"mr-3\"}/></a> : \"\"}\r\n                { profile && profile.soundcloudLink ? <a href={profile.soundcloudLink} target={\"_blank\"} rel={\"noopener noreferrer\"}><FontAwesomeIcon icon={faSoundcloud} className={\"mr-3\"}/></a> : \"\"}\r\n                { profile && profile.websiteLink ? <a href={profile.websiteLink} target={\"_blank\"} rel={\"noopener noreferrer\"}><FontAwesomeIcon icon={faGlobeAmericas} className={\"mr-3\"}/></a> : \"\"}\r\n            </div>\r\n        )\r\n\r\n        return (\r\n            <>\r\n                <div className={\"section py-4 py-lg-0\"} style={{backgroundColor: \"var(--background)\"}}>\r\n                    <Container className={\"user-info\"}>\r\n                        <Row>\r\n                            <Col sm={6} md={5} xl={4}>\r\n                                <div className={\"img-wrap\"}>\r\n                                    <Img src={user.imageUrl} />\r\n                                </div>\r\n                            </Col>\r\n                            <Col className={\"pt-3 pt-md-0 pt-lg-2 pt-xl-3 d-flex flex-column\"}>\r\n                                <h4 className={\"\"}>{ user.name }</h4>\r\n                                { auth.uid && auth.uid === id ? <p className={\"accent-text mb-2\"} style={{fontStyle: \"italic\"}}>{user.login}</p> : \"\"}\r\n                                <p className={\"mb-2 mt-1\"}>{ user.isArtist ? \"Artysta\" : \"Zespół\" }</p>\r\n                                <div className={\"mb-4\"}>\r\n                                    <div className={\"d-flex flex-row mb-1\"}>\r\n                                        <div className={\"icon-container mr-2\"}>\r\n                                            <FontAwesomeIcon icon={faMapMarkerAlt}/>\r\n                                        </div>\r\n                                        <p className={\"m-0\"}>{ voivodeship + \", \" + user.city }</p>\r\n                                    </div>\r\n                                </div>\r\n                                { statusArray ?\r\n                                     <div className={\"block mb-1\"}>\r\n                                        <Blocks elementsList={ statusArray } align={\"start\"}/>\r\n                                     </div>\r\n                                    : null\r\n                                }\r\n                                { links }\r\n                                { button }\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n                <div className={\"p-0 p-lg-2 p-xl-4 background-light\"}/>\r\n            </>\r\n        );\r\n    }\r\n\r\n    descriptionSection = (_) => {\r\n        const { profile } = this.props;\r\n\r\n        return (\r\n            <Row>\r\n                <Col className={\"text-center\"}>\r\n                    <h5 className={\"mb-3\"}>Opis</h5>\r\n                    <p>{ profile.description }</p>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    genresInstrumentsMembersSection = (isBgLight) => {\r\n        const { user, genres, instruments, usersOrdered } = this.props;\r\n\r\n        let genresNames = [];\r\n        let instrumentsNames = [];\r\n        let members = [];\r\n\r\n        user.genresId && user.genresId.forEach(genre => genresNames.push(genres[genre]));\r\n        user.instrumentsId && user.instrumentsId.forEach(instr => instrumentsNames.push(instruments[instr]));\r\n        usersOrdered && user.members && user.members.forEach(member => {\r\n            members.push({\r\n                name: member.userId ? usersOrdered.find(elem => elem.id === member.userId) && usersOrdered.find(elem => elem.id === member.userId).name : member.name,\r\n                path: member.userId ? \"/profil/\" + member.userId : \"\",\r\n                buttonText: \"Odwiedź profil\"\r\n            })\r\n        });\r\n\r\n        return (\r\n            <Row className={\"justify-content-center\"}>\r\n                <Col md={6} className={\"text-center mb-2 mb-md-0\"}>\r\n                    <h5 className={\"mb-3\"}>Gatunki</h5>\r\n                    <Blocks elementsList={ genresNames } align={\"center\"}/>\r\n                </Col>\r\n                { user.isArtist ?\r\n                    <Col md={6} className={\"text-center mt-5 mt-md-0\"}>\r\n                        <h5 className={\"mb-3\"}>Instrumenty</h5>\r\n                        <Blocks elementsList={ instrumentsNames } align={\"center\"}/>\r\n                    </Col>\r\n                    : members.length !== 0 ?\r\n                        <Col md={6} className={\"text-center mt-5 mt-md-0\"}>\r\n                            <h5 className={\"mb-4\"}>Członkowie</h5>\r\n                            <BlocksWithButton elementsList={members} isBgLight={isBgLight}/>\r\n                        </Col>\r\n                        : \"\"\r\n                }\r\n            </Row>\r\n        )\r\n    }\r\n\r\n    bandsSection = (isBgLight) => {\r\n        const { user, usersOrdered } = this.props;\r\n        let bands = [];\r\n\r\n        console.log(usersOrdered);\r\n\r\n        usersOrdered && user.bandsId && user.bandsId.forEach(bandId => {\r\n            let band = usersOrdered.find( elem => elem.id === bandId)\r\n            bands.push({\r\n                name: band.name,\r\n                path: \"/profil/\" + bandId,\r\n                buttonText: \"Odwiedź profil\"\r\n            });\r\n        });\r\n\r\n        return (\r\n            <Row className={\"justify-content-center\"}>\r\n                <Col className={\"text-center align-self-center\"} md={10} lg={8}>\r\n                    <h5 className={\"mb-4\"}>Zespoły</h5>\r\n                    <BlocksWithButton elementsList={bands} isBgLight={isBgLight}/>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    recordsSection = (_) => {\r\n        const {profile} = this.props;\r\n\r\n        return (\r\n            <Row className={\"justify-content-center\"}>\r\n                <Col md={8} lg={7} className={\"text-center align-self-center\"}>\r\n                    <h5 className={\"mb-5\"}>Nagrania</h5>\r\n                    <div className={\"d-flex flex-column\"}>\r\n                        { profile.recordings.map((recordingsUrl, index) =>\r\n                            <ReactAudioPlayer key={index} className={\"mb-3\"} src={recordingsUrl} title={\"Sample \" + (index + 1)} controls/>\r\n                        )}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    gallerySection = (_) => {\r\n        const {profile} = this.props;\r\n\r\n        return (\r\n            <Row className={\"justify-content-center\"}>\r\n                <Col className={\"text-center align-self-center\"}>\r\n                    <h5 className={\"mb-5\"}>Galeria</h5>\r\n                    <div className={\"img-grid\"}>\r\n                        { profile.imageGallery.map((imageUrl, index) =>\r\n                            <div className={\"img-wrap\"} key={index}>\r\n                                <Img src={imageUrl} key={index} alt={\"zdjęcie\"}/>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    videoSection = (_) => {\r\n        const {profile} = this.props;\r\n\r\n        return (\r\n            <Row id={\"video-section\"} className={\"justify-content-center\"}>\r\n                <Col className={\"text-center align-self-center d-flex flex-column align-items-center\"}>\r\n                    <h5 className={\"mb-4\"}>Film</h5>\r\n                    <ReactPlayer url={profile && profile.videoLink}/>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n    displayEditModal = () => {\r\n        const { editModalShow } = this.state;\r\n        const { auth, user, users, usersOrdered, usersArtists, profile, status, statusOrdered,\r\n            voivodeships, voivodeshipsOrdered, genres, genresOrdered, instruments, instrumentsOrdered } = this.props;\r\n\r\n        console.log(this.props);\r\n        return (\r\n            <Modal\r\n                id={\"edit-modal\"}\r\n                aria-labelledby={\"profile-edit\"}\r\n                backdropClassName={\"profile-edit\"}\r\n                show={editModalShow}\r\n                onHide={() => this.setState({editModalShow: false})}\r\n                size=\"lg\"\r\n                centered>\r\n                <Modal.Header closeButton/>\r\n                <Modal.Body>\r\n                    <UserProfileEdit\r\n                        auth={auth}\r\n                        user={user}\r\n                        users={users}\r\n                        usersOrdered={usersOrdered}\r\n                        usersArtists={usersArtists}\r\n                        profile={profile}\r\n                        statusFiltered={status}\r\n                        statusFilteredOrdered={statusOrdered && statusOrdered.filter((s) => s.type === \"all\" || s.type === (user && user.isArtist ? \"artist\" : \"band\"))}\r\n                        voivodeships={voivodeships}\r\n                        voivodeshipsOrdered={voivodeshipsOrdered}\r\n                        genres={genres}\r\n                        genresOrdered={genresOrdered}\r\n                        instruments={instruments}\r\n                        instrumentsOrdered={instrumentsOrdered}\r\n                        closeModal={this.closeEditModal}\r\n                        scrollToTop={this.scrollEditModalToTop}\r\n                    />\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    closeEditModal = () => {\r\n        this.setState({editModalShow: false})\r\n    }\r\n\r\n    scrollEditModalToTop = () => {\r\n        document.getElementsByClassName(\"modal\")[0].scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n    displayMessageModal = () => {\r\n        const { messageModalShow } = this.state;\r\n\r\n        return (\r\n            <Modal\r\n                show={messageModalShow}\r\n                onHide={() => this.setState({messageModalShow: false})}\r\n                size=\"md\"\r\n                centered>\r\n                <Modal.Header closeButton className={\"d-flex flex-row justify-content-center pt-4\"}>\r\n                    <h5>Nowa wiadomość</h5>\r\n                </Modal.Header>\r\n                <Modal.Body className={\"d-flex flex-row justify-content-center\"}>\r\n                    <Form className={\"block p-3 d-flex flex-column align-items-center\"} onSubmit={this.handleSendMessage}>\r\n                        <Form.Group className={\"block mb-4 text-left animated-label\"}>\r\n                            <Form.Control\r\n                                id={\"name\"}\r\n                                name={\"name\"}\r\n                                type={\"text\"}\r\n                                className={this.state.name ? \"not-empty\" : \"\"}\r\n                                value={this.state.name}\r\n                                size=\"sm\"\r\n                                autoComplete={\"off\"}\r\n                                maxLength={\"100\"}\r\n                                onChange={this.handleChange}\r\n                                onBlur={this.handleBlur}\r\n                                isInvalid={this.state.errors.name}\r\n                            />\r\n                            <Form.Label>Imię i nazwisko</Form.Label>\r\n                            <Form.Control.Feedback type=\"invalid\" className={\"text-left\"}>{this.state.errors.name}</Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <Form.Group className={\"block mb-4 mt-2 text-left animated-label\"}>\r\n                            <Form.Control\r\n                                id={\"email\"}\r\n                                name={\"email\"}\r\n                                type={\"email\"}\r\n                                className={this.state.email ? \"not-empty\" : \"\"}\r\n                                value={this.state.email}\r\n                                size=\"sm\"\r\n                                autoComplete={\"off\"}\r\n                                onChange={this.handleChange}\r\n                                onBlur={this.handleBlur}\r\n                                isInvalid={this.state.errors.email}\r\n                            />\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control.Feedback type=\"invalid\" className={\"text-left\"}>{this.state.errors.email}</Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <Form.Group className={\"block mb-5 mt-2 text-left animated-label\"}>\r\n                            <Form.Control\r\n                                id={\"subject\"}\r\n                                name={\"subject\"}\r\n                                type={\"text\"}\r\n                                className={this.state.subject ? \"not-empty\" : \"\"}\r\n                                size=\"sm\"\r\n                                autoComplete={\"off\"}\r\n                                onChange={this.handleChange}\r\n                                onBlur={this.handleBlur}\r\n                                isInvalid={this.state.errors.subject}\r\n                            />\r\n                            <Form.Label>Temat</Form.Label>\r\n                            <Form.Control.Feedback type=\"invalid\" className={\"text-left\"}>{this.state.errors.subject}</Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <h6 className={\"mb-3\"}>Treść</h6>\r\n                        <Form.Group className={\"block mb-5\"}>\r\n                            <Form.Control\r\n                                id={\"message\"}\r\n                                name={\"message\"}\r\n                                as={\"textarea\"}\r\n                                rows={5}\r\n                                maxLength={\"1000\"}\r\n                                size=\"sm\"\r\n                                onChange={this.handleChange}\r\n                                onBlur={this.handleBlur}\r\n                                isInvalid={this.state.errors.message}\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\" className={\"text-left\"}>{this.state.errors.message}</Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className={\"block mb-5 d-none\"}>\r\n                            <Form.Control\r\n                                id={\"to_name\"}\r\n                                name={\"to_name\"}\r\n                                type={\"text\"}\r\n                                size=\"sm\"\r\n                                value={this.props.user.name}\r\n                                readOnly\r\n                                hidden\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className={\"block mb-5 d-none\"}>\r\n                            <Form.Control\r\n                                id={\"to_email\"}\r\n                                name={\"to_email\"}\r\n                                type={\"text\"}\r\n                                size=\"sm\"\r\n                                value={this.props.user.email}\r\n                                readOnly\r\n                                hidden\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"outline-accent\" size=\"sm\" type={\"submit\"} className={\"px-4\"}>Wyślij</Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    handleSendMessage = (e) => {\r\n        e.preventDefault();\r\n        const { errors } = this.state;\r\n\r\n        if (this.evaluateFields([\"name\", \"email\", \"subject\", \"message\"])){\r\n            if (!Object.keys(errors).some((key) => errors[key])) {\r\n                emailjs.sendForm('gmail', 'users_contact_template', e.target, 'user_W1PcscGeAalQnDU1stttN')\r\n                    .then((result) => {\r\n                        console.log(result.text);\r\n                    }, (error) => {\r\n                        console.log(error.text);\r\n                    });\r\n                e.target.reset();\r\n                this.setState({ messageModalShow: false });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { id, value } = e.target;\r\n        const { errors } = this.state;\r\n\r\n        this.setState({\r\n            [id]: value\r\n        })\r\n\r\n        if (errors[id]) {\r\n            this.setState({\r\n                errors: {\r\n                    ...errors,\r\n                    [id]: \"\"\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    handleBlur = (e) => {\r\n        this.evaluateFields([e.target.id]);\r\n    }\r\n\r\n    evaluateFields = (slugs) => {\r\n        const { errors } = this.state;\r\n        let newErrors = {};\r\n\r\n        slugs.forEach(slug => {\r\n            const value = this.state[slug];\r\n            let errorMessage = \"\";\r\n\r\n            if (isEmpty(value)) {\r\n                errorMessage = \"* Wymagane pole\";\r\n            }\r\n            else {\r\n                switch (slug) {\r\n                    case \"email\":\r\n                        if (!isEmail(value)) errorMessage = \"* Nieprawidłowy adres email\"\r\n                        else errorMessage = \"\";\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            newErrors[slug] = errorMessage;\r\n        })\r\n\r\n        this.setState({\r\n            errors: {\r\n                ...errors,\r\n                ...newErrors\r\n            }\r\n        })\r\n\r\n        return !Object.keys(newErrors).some((key) => newErrors[key])\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        activeUser: state.firebase.profile,\r\n\r\n        user: state.firestore.data.allUsers && state.firestore.data.allUsers[ownProps.match.params.id],\r\n        users: state.firestore.data.allUsers,\r\n        usersOrdered: state.firestore.ordered.allUsers,\r\n        usersArtists: state.firestore.ordered.allUsers && state.firestore.ordered.allUsers.filter(user => user.isArtist),\r\n        profile: state.firestore.ordered.profiles && state.firestore.ordered.profiles[0],\r\n\r\n        status: state.firestore.data.status,\r\n        statusOrdered: state.firestore.ordered.status,\r\n\r\n        voivodeships: state.firestore.data.voivodeships,\r\n        voivodeshipsOrdered: state.firestore.ordered.voivodeships,\r\n\r\n        genres: state.firestore.data.genres,\r\n        genresOrdered: state.firestore.ordered.genres,\r\n\r\n        instruments: state.firestore.data.instruments,\r\n        instrumentsOrdered: state.firestore.ordered.instruments\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect((props) => [\r\n        {collection: \"users\", storeAs: \"allUsers\"},\r\n        {collection: \"profiles\", where: [\"userId\", \"==\", props.match.params.id]},\r\n        {collection: \"status\"},\r\n        {collection: \"voivodeships\"},\r\n        {collection: \"genres\", orderBy: \"name\"},\r\n        {collection: \"instruments\", orderBy: \"name\"}\r\n    ])\r\n)(UserProfile);","C:\\Users\\gnied\\Documents\\GitHub\\zGrani\\src\\views\\users\\UserProfileCreate.js",[],{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"222","replacedBy":"226"},{"ruleId":"224","replacedBy":"227"},{"ruleId":"222","replacedBy":"228"},{"ruleId":"224","replacedBy":"229"},{"ruleId":"222","replacedBy":"230"},{"ruleId":"224","replacedBy":"231"},{"ruleId":"222","replacedBy":"232"},{"ruleId":"224","replacedBy":"233"},{"ruleId":"222","replacedBy":"234"},{"ruleId":"224","replacedBy":"235"},{"ruleId":"222","replacedBy":"236"},{"ruleId":"224","replacedBy":"237"},{"ruleId":"222","replacedBy":"238"},{"ruleId":"224","replacedBy":"239"},{"ruleId":"222","replacedBy":"240"},{"ruleId":"224","replacedBy":"241"},{"ruleId":"222","replacedBy":"242"},{"ruleId":"224","replacedBy":"243"},{"ruleId":"222","replacedBy":"244"},{"ruleId":"224","replacedBy":"245"},{"ruleId":"222","replacedBy":"246"},{"ruleId":"224","replacedBy":"247"},{"ruleId":"222","replacedBy":"248"},{"ruleId":"224","replacedBy":"249"},{"ruleId":"222","replacedBy":"250"},{"ruleId":"224","replacedBy":"251"},{"ruleId":"222","replacedBy":"252"},{"ruleId":"224","replacedBy":"253"},{"ruleId":"254","severity":1,"message":"255","line":3,"column":10,"nodeType":"256","messageId":"257","endLine":3,"endColumn":17},{"ruleId":"254","severity":1,"message":"258","line":2,"column":10,"nodeType":"256","messageId":"257","endLine":2,"endColumn":14},"no-native-reassign",["259"],"no-negated-in-lhs",["260"],["259"],["260"],["259"],["260"],["259"],["260"],["259"],["260"],["259"],["260"],["259"],["260"],["259"],["260"],["259"],["260"],["259"],["260"],["259"],["260"],["259"],["260"],["259"],["260"],["259"],["260"],["259"],["260"],"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]